generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TelegramUser {
  id         Int     @id @default(autoincrement())
  telegramId BigInt  @unique
  username   String?
  firstName  String?
  lastName   String?

  walletPubKey        String @unique
  encryptedPrivateKey String // Encrypted secret key stored securely

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  dcaStrategies DcaStrategy[]
}

model DcaStrategy {
  id     String       @id @default(uuid())
  userId Int
  user   TelegramUser @relation(fields: [userId], references: [id])

  baseToken         String
  targetToken       String
  amountPerInterval Decimal      @db.Decimal(65, 30)
  frequency         DcaFrequency
  nextExecutionTime DateTime
  status            DcaStatus    @default(ACTIVE)

  totalInvested       Decimal  @default(0) @db.Decimal(65, 30)
  executionCount      Int      @default(0)
  averageBuyPrice     Decimal? @db.Decimal(65, 30)
  consecutiveFailures Int      @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  executions DcaExecution[]
}

model DcaExecution {
  id         String      @id @default(uuid())
  strategyId String
  strategy   DcaStrategy @relation(fields: [strategyId], references: [id])

  executionTime  DateTime @default(now())
  amountInvested Decimal  @db.Decimal(65, 30)
  tokensReceived Decimal  @db.Decimal(65, 30)
  executionPrice Decimal  @db.Decimal(65, 30) 

  txHash       String?
  status       ExecutionStatus @default(SUCCESS)
  errorMessage String?

  createdAt DateTime @default(now())
}

enum DcaStatus {
  ACTIVE
  PAUSED
  COMPLETED
  CANCELLED
}

enum ExecutionStatus {
  SUCCESS
  FAILED
  PENDING
}

enum DcaFrequency {
  TEST
  HOURLY
  DAILY
  WEEKLY
  MONTHLY
}

model TokenPair {
  id          String   @id @default(uuid())
  baseToken   String 
  baseMint    String
  targetToken String 
  targetMint  String
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())

  @@unique([baseToken, targetToken], name: "baseToken_targetToken")
}
