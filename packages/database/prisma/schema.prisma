generator client {
  provider      = "prisma-client-js"
  output        = "../generated/client"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TelegramUser {
  id         Int     @id @default(autoincrement())
  telegramId BigInt  @unique
  username   String?
  firstName  String?
  lastName   String?

  walletPubKey        String @unique
  encryptedPrivateKey String // Encrypted secret key stored securely

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  dcaStrategies DcaStrategy[]
}

model DcaStrategy {
  id     String       @id @default(uuid())
  userId Int
  user   TelegramUser @relation(fields: [userId], references: [id])

  baseToken         String
  targetToken       String
  amountPerInterval BigInt       // Amount in smallest unit (e.g., lamports)
  frequency         DcaFrequency
  nextExecutionTime DateTime
  status            DcaStatus    @default(ACTIVE)

  // Decimal places for tokens (e.g., SOL = 9, USDC = 6)
  baseTokenDecimals   Int @default(9)
  targetTokenDecimals Int @default(9)

  totalInvested       BigInt @default(0) // Total invested in smallest unit
  executionCount      Int    @default(0)
  averageBuyPrice     BigInt? // Average price in smallest unit
  consecutiveFailures Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  executions DcaExecution[]
}

model DcaExecution {
  id         String      @id @default(uuid())
  strategyId String
  strategy   DcaStrategy @relation(fields: [strategyId], references: [id])

  executionTime  DateTime @default(now())
  amountInvested BigInt   // Amount invested in smallest unit
  tokensReceived BigInt   // Tokens received in smallest unit
  executionPrice BigInt   // Price at execution in smallest unit

  txHash       String?
  status       ExecutionStatus @default(SUCCESS)
  errorMessage String?

  createdAt DateTime @default(now())
}

enum DcaStatus {
  ACTIVE
  PAUSED
  COMPLETED
  CANCELLED
}

enum ExecutionStatus {
  SUCCESS
  FAILED
  PENDING
}

enum DcaFrequency {
  TEST
  HOURLY
  DAILY
  WEEKLY
  MONTHLY
}

model TokenPair {
  id                  String   @id @default(uuid())
  baseToken           String
  baseMint            String
  baseTokenDecimals   Int      @default(9)  // e.g., SOL = 9
  targetToken         String
  targetMint          String
  targetTokenDecimals Int      @default(9)
  active              Boolean  @default(true)
  createdAt           DateTime @default(now())

  @@unique([baseToken, targetToken], name: "baseToken_targetToken")
}
